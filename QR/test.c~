#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <omp.h>
#include "QR.h"

#define L1_BLK_SIZE 2
#define L2_BLK_SIZE (L1_BLK_SIZE * 2)

void test2( double *A, int wA, int hA, double *B, int wB, int hB, double *C)
{


/* Matrix Deminsions of Output matrix */
int wC = wB;
int hC = hA;

/* Calculate the number of Blocks in the height and width of C, as well as the width of A */
int wn_bloc = (wC+L2_BLK_SIZE -1)/L2_BLK_SIZE; // Number of Blocks in the widith (round up)
int hn_bloc = (hC+L2_BLK_SIZE -1)/L2_BLK_SIZE; // Number of Blocks in the height (round up)
int wA_bloc = (wA+L2_BLK_SIZE -1)/L2_BLK_SIZE; // Number of Blocks in the widith of matrix A  (round up)


printf(" Number of blocks in width of A = %d,\n Number of blocks in width of C = %d,\n Number of blocks in height of C = %d \n", wA_bloc, wn_bloc, hn_block );



for(int i=0; i<hC; i++){
	for(int j=0;j<wC; j++){
		for(int k=0; k<wA;k++){
			C[i + j*hC] += A[i +k*hA]*B[k +j*hB];
		}
	}
  }

printf(" A = \n");
for (int i=0; i< hC ; i++){
	for( int j=0; j<wC ; j++){  
		printf("%.0e\t", C[i + j*hC]);
	}
	printf("\n");
}
}



}
